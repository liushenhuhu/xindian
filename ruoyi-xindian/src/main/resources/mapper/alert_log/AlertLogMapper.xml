<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.xindian.alert_log.mapper.AlertLogMapper">

    <!--    <cache eviction="FIFO" flushInterval="5000" readOnly="false" size="1024"/>-->

    <resultMap type="AlertLog" id="AlertLogResult">
        <result property="logId" column="log_id"/>
        <result property="logTime" column="log_time"/>
        <result property="logType" column="log_type"/>
        <result property="eventName" column="event_name"/>
        <result property="eventDescription" column="event_description"/>
        <result property="pId" column="p_id"/>
        <result property="patientName" column="patient_name_aes"/>
        <result property="patientCode" column="patient_code"/>
        <result property="patientPhone" column="patient_phone_aes"/>
        <result property="familyPhone" column="family_phone"/>
        <result property="hospitalCode" column="hospital_code"/>
        <result property="hospitalName" column="hospital_name"/>
        <result property="anoStatus" column="ano_status"/>
        <result property="patientAge" column="patient_age"/>
        <result property="patientSex" column="patient_sex"/>
        <result property="userId" column="user_id"/>
        <result property="ecgType" column="ecg_type"/>
        <result property="doctorPhone" column="doctor_phone_aes"/>
    </resultMap>


    <sql id="selectAlertLogVo">
        select log_id,
               log_time,
               log_type,
               event_name,
               event_description,
               al.p_id,
               pm.hospital_code,
               pm.patient_code,
               h.hospital_name,
               patient_name_aes,
               pm.patient_phone_aes,
               family_phone,
               ano_status,
               patient_age,
               patient_sex,
               ecg_type,
               doctor_phone_aes
        from alert_log al
                 inner join patient_management pm on al.p_id = pm.p_id
                 inner join patient p on pm.patient_phone_aes = p.patient_phone_aes
                 inner join hospital h on pm.hospital_code = h.hospital_code
    </sql>

    <sql id="selectAlertLogCount">
        select count(0)
        from alert_log al
        inner join patient_management pm on al.p_id = pm.p_id
        <if test="patientName != null ">
            inner join patient p on pm.patient_phone_aes = p.patient_phone_aes
        </if>
        <if test="hospitalName != null ">
            inner join hospital h on pm.hospital_code = h.hospital_code
        </if>
    </sql>

    <sql id="selectAnoVo">
        select al.log_id,
               log_time,
               alu.log_type,
               alu.event_name,
               alu.event_description,
               al.p_id,
               patient_name_aes,
               alu.ano_status,
               patient_age,
               patient_sex,
               user_id,
               ecg_type
        from alert_log al
                 inner join patient_management pm on al.p_id = pm.p_id
                 inner join patient p on pm.patient_phone_aes = p.patient_phone_aes
                 inner join alert_log_user alu on al.log_id = alu.log_id
    </sql>

    <sql id="selectAnoCount">
        select count(0)
        from alert_log al
        inner join alert_log_user alu on al.log_id = alu.log_id
        <if test="patientName != null or patientSex != null ">
            inner join patient_management pm on al.p_id = pm.p_id
            inner join patient p on pm.patient_phone_aes = p.patient_phone_aes
        </if>
    </sql>

    <select id="selectAlertLogList" parameterType="AlertLog" resultMap="AlertLogResult">
        <include refid="selectAlertLogVo"/>
        <where>
            <if test="logId != null ">and log_id = #{logId}</if>
            <if test="params.beginLogTime != null and params.beginLogTime != '' and params.endLogTime != null and params.endLogTime != ''">
                and log_time between #{params.beginLogTime} and #{params.endLogTime}
            </if>
            <if test="logType != null  and logType != ''">and log_type like concat('%', #{logType}, '%')</if>
            <if test="eventName != null  and eventName != ''">and event_name like concat('%', #{eventName}, '%')</if>
            <if test="eventDescription != null  and eventDescription != ''">and event_description like concat('%',
                #{eventDescription}, '%')
            </if>
            <if test="pId != null ">and al.p_id = #{pId}</if>
            <if test="patientName != null ">and patient_name_aes like concat('%', #{patientName}, '%')</if>
            <if test="hospitalName != null ">and hospital_name like concat('%', #{hospitalName}, '%')</if>
            <if test="anoStatus != null ">and ano_status = #{anoStatus}</if>
            <if test="patientAge != null ">and patient_age = #{patientAge}</if>
            <if test="patientSex != null ">and patient_sex = #{patientSex}</if>
            <if test="patientPhone != null ">and pm.patient_phone_aes = #{patientPhone}</if>
            <if test="hospitalCode != null ">and pm.hospital_code = #{hospitalCode}</if>
            <if test="ecgType != null ">and ecg_type = #{ecgType}</if>
            <if test="doctorPhone != null  and doctorPhone != ''">and doctor_phone like concat('%', #{doctorPhone},
                '%')
            </if>
        </where>
        order by log_time desc
    </select>



    <select id="selectAlertLogList12" parameterType="AlertLog" resultMap="AlertLogResult">
        <include refid="selectAlertLogVo"/>
        <where>
            <if test="ecgType != null  and ecgType != ''">and (ecg_type = "JECG12YTJ" or ecg_type = "JECG12YXD" or
                ecg_type = "DECG12YXD" or ecg_type = "DECG12SX")
            </if>
            <if test="logId != null ">and log_id = #{logId}</if>
            <if test="params.beginLogTime != null and params.beginLogTime != '' and params.endLogTime != null and params.endLogTime != ''">
                and log_time between #{params.beginLogTime} and #{params.endLogTime}
            </if>
            <if test="logType != null  and logType != ''">and log_type like concat('%', #{logType}, '%')</if>
            <if test="eventName != null  and eventName != ''">and event_name like concat('%', #{eventName}, '%')</if>
            <if test="eventDescription != null  and eventDescription != ''">and event_description like concat('%',
                #{eventDescription}, '%')
            </if>
            <if test="pId != null ">and al.p_id = #{pId}</if>
            <if test="patientName != null ">and patient_name_aes like concat('%', #{patientName}, '%')</if>
            <if test="hospitalName != null ">and hospital_name like concat('%', #{hospitalName}, '%')</if>
            <if test="anoStatus != null ">and ano_status = #{anoStatus}</if>
            <if test="patientAge != null ">and patient_age = #{patientAge}</if>
            <if test="patientSex != null ">and patient_sex = #{patientSex}</if>
            <if test="hospitalCode != null ">and pm.hospital_code = #{hospitalCode}</if>
            <if test="patientPhone != null ">and pm.patient_phone_aes = #{patientPhone}</if>
            <if test="doctorPhone != null  and doctorPhone != ''">and doctor_phone_aes like concat('%', #{doctorPhone},
                '%')
            </if>
        </where>
        order by log_time desc
    </select>



    <select id="selectAlertLogListSingle" parameterType="AlertLog" resultMap="AlertLogResult">
        <include refid="selectAlertLogVo"/>
        <where>
            <if test="ecgType != null  and ecgType != ''">and (ecg_type = "JECGsingleGZ" or ecg_type = "DECGsingleZZ" or
                ecg_type = "DECGsingleGZ")
            </if>
            <if test="logId != null ">and log_id = #{logId}</if>
            <if test="params.beginLogTime != null and params.beginLogTime != '' and params.endLogTime != null and params.endLogTime != ''">
                and log_time between #{params.beginLogTime} and #{params.endLogTime}
            </if>
            <if test="logType != null  and logType != ''">and log_type like concat('%', #{logType}, '%')</if>
            <if test="eventName != null  and eventName != ''">and event_name like concat('%', #{eventName}, '%')</if>
            <if test="eventDescription != null  and eventDescription != ''">and event_description like concat('%',
                #{eventDescription}, '%')
            </if>
            <if test="pId != null ">and al.p_id = #{pId}</if>
            <if test="patientName != null ">and patient_name_aes like concat('%', #{patientName}, '%')</if>
            <if test="hospitalName != null ">and hospital_name like concat('%', #{hospitalName}, '%')</if>
            <if test="anoStatus != null ">and ano_status = #{anoStatus}</if>
            <if test="patientAge != null ">and patient_age = #{patientAge}</if>
            <if test="patientSex != null ">and patient_sex = #{patientSex}</if>
            <if test="hospitalCode != null ">and pm.hospital_code = #{hospitalCode}</if>
            <if test="patientPhone != null ">and pm.patient_phone_aes = #{patientPhone}</if>
            <if test="doctorPhone != null  and doctorPhone != ''">and doctor_phone_aes like concat('%', #{doctorPhone},
                '%')
            </if>
        </where>
        order by log_time desc
    </select>


    <select id="selectAnoListByUserId" parameterType="AlertLog" resultMap="AlertLogResult">
        <include refid="selectAnoVo"/>
        <where>
            <if test="logId != null ">and log_id = #{logId}</if>
            <if test="params.beginLogTime != null and params.beginLogTime != '' and params.endLogTime != null and params.endLogTime != ''">
                and log_time between #{params.beginLogTime} and #{params.endLogTime}
            </if>
            <if test="logType != null  and logType != ''">and log_type like concat('%', #{logType}, '%')</if>
            <if test="eventName != null  and eventName != ''">and event_name like concat('%', #{eventName}, '%')</if>
            <if test="eventDescription != null  and eventDescription != ''">and event_description like concat('%',
                #{eventDescription}, '%')
            </if>
            <if test="pId != null ">and al.p_id = #{pId}</if>
            <if test="patientName != null ">and patient_name_aes like concat('%', #{patientName}, '%')</if>
            <if test="anoStatus != null ">and ano_status = #{anoStatus}</if>
            <if test="patientAge != null ">and patient_age = #{patientAge}</if>
            <if test="patientSex != null ">and patient_sex = #{patientSex}</if>
            <if test="hospitalCode != null ">and pm.hospital_code = #{hospitalCode}</if>
            <if test="patientPhone != null ">and pm.patient_phone_aes = #{patientPhone}</if>
            <if test="userId != null ">and user_id = #{userId}</if>
            <if test="ecgType != null ">and ecg_type = #{ecgType}</if>
        </where>
        order by log_time desc
    </select>


    <select id="selectAlertLogByLogId" parameterType="string" resultMap="AlertLogResult">
        <include refid="selectAlertLogVo"/>
        where al.log_id = #{logId}
    </select>
    <select id="select12List" resultType="com.ruoyi.xindian.alert_log.domain.AlertLog">
        <if test="ecgType != null&amp;&amp;ecgType =='12'">
            SELECT a.log_type AS name, COUNT(a.log_type) AS value
            FROM alert_log AS a
            INNER JOIN patient_management AS p ON a.p_id = p.p_id
            INNER JOIN log12_type AS t ON p.ecg_type = t.log_type
            WHERE	p.p_id =#{pId}
            GROUP BY a.log_type;
        </if>
        <if test="ecgType != null&amp;&amp;ecgType =='single'">
            SELECT a.log_type AS name, COUNT(a.log_type) AS value
            FROM alert_log AS a
            INNER JOIN patient_management AS p ON a.p_id = p.p_id
            INNER JOIN logSingle_type AS t ON p.ecg_type = t.log_type
            WHERE	p.p_id =#{pId}
            GROUP BY a.log_type;
        </if>
    </select>
    <select id="selectEarly" resultType="com.ruoyi.xindian.alert_log.domain.AlertLog">
        <if test="ecgType != null&amp;&amp;ecgType =='J12'">
            select if(LOCATE(',',a.intelligent_diagnosis)>0,left(a.intelligent_diagnosis, LOCATE(',',a.intelligent_diagnosis)-1),a.intelligent_diagnosis) AS name,
            COUNT(if(LOCATE(',',a.intelligent_diagnosis)>0,left(a.intelligent_diagnosis, LOCATE(',',a.intelligent_diagnosis)-1),a.intelligent_diagnosis)) AS value
            from report a INNER join patient_management p on a.p_id = p.p_id
            where p.ecg_type like concat('JECG12','%') GROUP BY if(LOCATE(',',a.intelligent_diagnosis)>0,left(a.intelligent_diagnosis, LOCATE(',',a.intelligent_diagnosis)-1),a.intelligent_diagnosis)
        </if>
        <if test="ecgType != null&amp;&amp;ecgType =='Jsingle'">
            select a.log_type AS name, COUNT(a.log_type) AS value from alert_log a INNER join patient_management p on a.p_id = p.p_id where p.ecg_type like concat('JECGsingle','%')  GROUP BY a.log_type
        </if>
        <if test="ecgType != null&amp;&amp;ecgType =='D12'">
            select a.log_type AS name, COUNT(a.log_type) AS value from alert_log a INNER join patient_management p on a.p_id = p.p_id where p.ecg_type like concat('DECG12','%')  GROUP BY a.log_type
        </if>
        <if test="ecgType != null&amp;&amp;ecgType =='Dsingle'">
            select a.log_type AS name, COUNT(a.log_type) AS value from alert_log a INNER join patient_management p on a.p_id = p.p_id where p.ecg_type like concat('DECGsingle','%')  GROUP BY a.log_type
        </if>

    </select>

    <insert id="insertAlertLog" parameterType="AlertLog">
        insert into alert_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="logId != null">log_id,</if>
            <if test="logTime != null">log_time,</if>
            <if test="logType != null">log_type,</if>
            <if test="eventName != null">event_name,</if>
            <if test="eventDescription != null">event_description,</if>
            <if test="pId != null">p_id,</if>
            <if test="anoStatus != null">ano_status,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="logId != null">#{logId},</if>
            <if test="logTime != null">#{logTime},</if>
            <if test="logType != null">#{logType},</if>
            <if test="eventName != null">#{eventName},</if>
            <if test="eventDescription != null">#{eventDescription},</if>
            <if test="pId != null">#{pId},</if>
            <if test="anoStatus != null">#{anoStatus},</if>
        </trim>
    </insert>

    <insert id="insertAno" parameterType="string">
        insert into alert_log_user(log_id, log_noise, log_noise_level, log_type, event_name, event_description)
        select alert_log.log_id,
               aln.log_noise,
               aln.log_noise_level,
               alert_log.log_type,
               alert_log.event_name,
               alert_log.event_description
        from alert_log
                 left join alert_log_noise aln on alert_log.log_id = aln.log_id
        where p_id = #{params};
    </insert>

    <insert id="insertAnoUser" parameterType="string">
        insert into ano_user
        values (#{param1}, #{param2});
    </insert>

    <update id="updateAno" parameterType="string">
        update alert_log_user
        set user_id = #{param1}
        where log_id in (
            select log_id
            from alert_log
            where p_id = #{param2}
        );
    </update>

    <update id="updateAlertLog" parameterType="AlertLog">
        update alert_log
        <trim prefix="SET" suffixOverrides=",">
            <if test="logTime != null">log_time = #{logTime},</if>
            <if test="logType != null">log_type = #{logType},</if>
            <if test="eventName != null">event_name = #{eventName},</if>
            <if test="eventDescription != null">event_description = #{eventDescription},</if>
            <if test="pId != null">p_id = #{pId},</if>
            <if test="anoStatus != null">ano_status = #{anoStatus},</if>
        </trim>
        where log_id = #{logId}
    </update>

    <delete id="deleteAlertLogByLogId" parameterType="string">
        delete
        from alert_log
        where log_id = #{logId}
    </delete>

    <delete id="deleteAlertLogByLogIds" parameterType="String">
        delete from alert_log where log_id in
        <foreach item="logId" collection="array" open="(" separator="," close=")">
            #{logId}
        </foreach>
    </delete>
</mapper>
