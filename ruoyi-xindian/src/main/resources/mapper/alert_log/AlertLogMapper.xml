<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.xindian.alert_log.mapper.AlertLogMapper">

<!--    <cache eviction="FIFO" flushInterval="5000" readOnly="false" size="1024"/>-->

    <resultMap type="AlertLog" id="AlertLogResult">
        <result property="logId"    column="log_id"    />
        <result property="logTime"    column="log_time"    />
        <result property="logType"    column="log_type"    />
        <result property="eventName"    column="event_name"    />
        <result property="eventDescription"    column="event_description"    />
        <result property="pId"    column="p_id"    />
        <result property="patientName" column="patient_name"    />
        <result property="patientCode" column="patient_code"    />
        <result property="patientPhone" column="patient_phone"  />
        <result property="familyPhone"    column="family_phone"    />
        <result property="hospitalCode" column="hospital_code"  />
        <result property="hospitalName" column="hospital_name"  />
    </resultMap>


    <sql id="selectAlertLogVo">
        select log_id, log_time, log_type, event_name, event_description, al.p_id,
               pm.hospital_code, pm.patient_code, patient_name, pm.patient_phone, family_phone, hospital_name
        from alert_log al
            inner join patient_management pm on al.p_id = pm.p_id
            inner join patient p on pm.patient_phone = p.patient_phone
            inner join hospital h on pm.hospital_code = h.hospital_code
    </sql>

    <select id="selectAlertLogList" parameterType="AlertLog" resultMap="AlertLogResult">
        <include refid="selectAlertLogVo"/>
        <where>
            <if test="params.beginLogTime != null and params.beginLogTime != '' and params.endLogTime != null and params.endLogTime != ''"> and log_time between #{params.beginLogTime} and #{params.endLogTime}</if>
            <if test="logType != null  and logType != ''"> and log_type like concat('%', #{logType}, '%')</if>
            <if test="eventName != null  and eventName != ''"> and event_name like concat('%', #{eventName}, '%')</if>
            <if test="eventDescription != null  and eventDescription != ''"> and event_description like concat('%', #{eventDescription}, '%')</if>
            <if test="pId != null "> and al.p_id like concat('%', #{pId}, '%')</if>
            <if test="patientName != null "> and patient_name like concat('%', #{patientName}, '%')</if>
            <if test="hospitalName != null "> and hospital_name like concat('%', #{hospitalName}, '%')</if>
        </where>
        order by log_time desc
    </select>

    <select id="selectAlertLogByLogId" parameterType="Long" resultMap="AlertLogResult">
        <include refid="selectAlertLogVo"/>
        where log_id = #{logId}
    </select>

    <insert id="insertAlertLog" parameterType="AlertLog">
        insert into alert_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="logId != null">log_id,</if>
            <if test="logTime != null">log_time,</if>
            <if test="logType != null">log_type,</if>
            <if test="eventName != null">event_name,</if>
            <if test="eventDescription != null">event_description,</if>
            <if test="pId != null">p_id,</if>
            <if test="logData != null">log_data,</if>
            <if test="logJson != null">log_json,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="logId != null">#{logId},</if>
            <if test="logTime != null">#{logTime},</if>
            <if test="logType != null">#{logType},</if>
            <if test="eventName != null">#{eventName},</if>
            <if test="eventDescription != null">#{eventDescription},</if>
            <if test="pId != null">#{pId},</if>
            <if test="logData != null">log_data,</if>
            <if test="logJson != null">log_json,</if>

        </trim>
    </insert>

    <update id="updateAlertLog" parameterType="AlertLog">
        update alert_log
        <trim prefix="SET" suffixOverrides=",">
            <if test="logTime != null">log_time = #{logTime},</if>
            <if test="logType != null">log_type = #{logType},</if>
            <if test="eventName != null">event_name = #{eventName},</if>
            <if test="eventDescription != null">event_description = #{eventDescription},</if>
            <if test="pId != null">p_id = #{pId},</if>
            <if test="logData != null">log_data = #{logData},</if>
            <if test="logJson != null">log_json = #{logJson},</if>
        </trim>
        where log_id = #{logId}
    </update>

    <delete id="deleteAlertLogByLogId" parameterType="Long">
        delete from alert_log where log_id = #{logId}
    </delete>

    <delete id="deleteAlertLogByLogIds" parameterType="String">
        delete from alert_log where log_id in
        <foreach item="logId" collection="array" open="(" separator="," close=")">
            #{logId}
        </foreach>
    </delete>
</mapper>
