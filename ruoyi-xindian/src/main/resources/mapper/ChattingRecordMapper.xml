<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.xindian.webSocket.mapper.ChattingRecordMapper">

    <resultMap id="BaseResultMap" type="com.ruoyi.xindian.webSocket.domain.ChattingRecord">
            <id property="chattingId" column="chatting_id" jdbcType="BIGINT"/>
            <result property="senderId" column="sender_id" jdbcType="VARCHAR"/>
            <result property="receiverId" column="receiver_id" jdbcType="VARCHAR"/>
            <result property="content" column="content" jdbcType="VARCHAR"/>
            <result property="contentType" column="content_type" jdbcType="VARCHAR"/>
            <result property="isRead" column="is_read" jdbcType="CHAR"/>
            <result property="delFlag" column="del_flag" jdbcType="CHAR"/>
            <result property="userType" column="user_type" jdbcType="CHAR"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        chatting_id,sender_id,receiver_id,
        content,content_type,is_read,
        del_flag,user_type,
        create_time,update_time
    </sql>
    <select id="selectChattingRecordList" resultType="com.ruoyi.xindian.webSocket.domain.ChattingRecord">
        select
        <include refid="Base_Column_List"/>
        from chatting_record
        where del_flag = '0' and ((sender_id = #{receiverId} and receiver_id = #{senderId}) or (sender_id = #{senderId} and receiver_id = #{receiverId} ))

        order by create_time desc
    </select>
</mapper>
