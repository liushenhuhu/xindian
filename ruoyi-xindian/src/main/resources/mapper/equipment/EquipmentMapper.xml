<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.xindian.equipment.mapper.EquipmentMapper">

    <resultMap type="Equipment" id="EquipmentResult">
        <result property="equipmentId"    column="equipment_id"    />
        <result property="equipmentCode"    column="equipment_code"    />
        <result property="equipmentVersion"    column="equipment_version"    />
        <result property="equipmentStatus"    column="equipment_status"    />
        <result property="hospitalCode"    column="hospital_code"    />
        <result property="departmentCode"    column="department_code"    />
        <result property="equipmentType"    column="equipment_type"    />
        <result property="patientPhone"    column="patient_phone"    />
        <result property="pId"    column="p_id"    />
        <result property="onOffStatus"    column="on_off_status"    />
    </resultMap>

    <sql id="selectEquipmentVo">
        select equipment_id, equipment_code, equipment_version, equipment_status, hospital_code, department_code, equipment_type, patient_phone, p_id, on_off_status from equipment
    </sql>

    <select id="selectEquipmentList" parameterType="Equipment" resultMap="EquipmentResult">
        <include refid="selectEquipmentVo"/>
        <where>
            <if test="equipmentCode != null  and equipmentCode != ''"> and equipment_code like concat('%', #{equipmentCode}, '%')</if>
            <if test="equipmentVersion != null  and equipmentVersion != ''"> and equipment_version like concat('%', #{equipmentVersion}, '%')</if>
            <if test="equipmentStatus != null  and equipmentStatus != ''"> and equipment_status like concat('%', #{equipmentStatus}, '%')</if>
            <if test="departmentCode != null  and departmentCode != ''"> and department_code like concat('%', #{departmentCode}, '%')</if>
            <if test="equipmentType != null  and equipmentType != ''"> and equipment_type = #{equipmentType}</if>
            <if test="patientPhone != null  and patientPhone != ''"> and patient_phone like concat('%', #{patientPhone}, '%')</if>
            <if test="pId != null  and pId != ''"> and p_id = #{pId}</if>
            <if test="hospitalCodeList != null and hospitalCodeList.size()>0">
                and  hospital_code in
                <foreach collection="hospitalCodeList" index="index" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        order by equipment_status desc
    </select>

    <select id="selectEquipmentByEquipmentId" parameterType="Long" resultMap="EquipmentResult">
        <include refid="selectEquipmentVo"/>
        where equipment_id = #{equipmentId}
    </select>

    <select id="selectEquipmentByEquipmentCode" parameterType="Equipment" resultMap="EquipmentResult">
        <include refid="selectEquipmentVo"/>
        where equipment_code = #{equipmentCode}
    </select>



    <insert id="insertEquipment" parameterType="Equipment">
        insert into equipment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="equipmentId != null">equipment_id,</if>
            <if test="equipmentCode != null and equipmentCode != ''">equipment_code,</if>
            <if test="equipmentVersion != null">equipment_version,</if>
            <if test="equipmentStatus != null">equipment_status,</if>
            <if test="hospitalCode != null and hospitalCode != ''">hospital_code,</if>
            <if test="departmentCode != null and departmentCode != ''">department_code,</if>
            <if test="equipmentType != null">equipment_type,</if>
            <if test="patientPhone != null">patient_phone,</if>
            <if test="pId != null">p_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="equipmentId != null">#{equipmentId},</if>
            <if test="equipmentCode != null and equipmentCode != ''">#{equipmentCode},</if>
            <if test="equipmentVersion != null">#{equipmentVersion},</if>
            <if test="equipmentStatus != null">#{equipmentStatus},</if>
            <if test="hospitalCode != null and hospitalCode != ''">#{hospitalCode},</if>
            <if test="departmentCode != null and departmentCode != ''">#{departmentCode},</if>
            <if test="equipmentType != null">#{equipmentType},</if>
            <if test="patientPhone != null">#{patientPhone},</if>
            <if test="pId != null">#{pId},</if>
        </trim>
    </insert>

    <update id="updateEquipment" parameterType="Equipment">
        update equipment
        <trim prefix="SET" suffixOverrides=",">
            <if test="equipmentCode != null and equipmentCode != ''">equipment_code = #{equipmentCode},</if>
            <if test="equipmentVersion != null">equipment_version = #{equipmentVersion},</if>
            <if test="equipmentStatus != null">equipment_status = #{equipmentStatus},</if>
            <if test="hospitalCode != null and hospitalCode != ''">hospital_code = #{hospitalCode},</if>
            <if test="departmentCode != null and departmentCode != ''">department_code = #{departmentCode},</if>
            <if test="equipmentType != null">equipment_type = #{equipmentType},</if>
            <if test="patientPhone != null">patient_phone = #{patientPhone},</if>
            <if test="pId != null">p_id = #{pId},</if>
        </trim>
        where equipment_id = #{equipmentId}
    </update>

    <update id="updateEquipmentStatusAll">
        update equipment set equipment_status = 'False'
    </update>

    <update id="updateEquipmentStatus">
        update equipment set equipment_status = 'True' where equipment_code in
        <foreach item="equipmentCode" collection="array" open="(" separator="," close=")">
            #{equipmentCode}
        </foreach>
    </update>

    <delete id="deleteEquipmentByEquipmentId" parameterType="Long">
        delete from equipment where equipment_id = #{equipmentId}
    </delete>

    <delete id="deleteEquipmentByEquipmentIds" parameterType="String">
        delete from equipment where equipment_id in
        <foreach item="equipmentId" collection="array" open="(" separator="," close=")">
            #{equipmentId}
        </foreach>
    </delete>
</mapper>
