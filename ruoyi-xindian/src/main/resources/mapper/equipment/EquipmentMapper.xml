<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.xindian.equipment.mapper.EquipmentMapper">

    <resultMap type="Equipment" id="EquipmentResult">
        <result property="equipmentId"    column="equipment_id"    />
        <result property="equipmentNumber"    column="equipment_number"    />
        <result property="equipmentVersion"    column="equipment_version"    />
        <result property="equipmentStatus"    column="equipment_status"    />
        <result property="hospitalCode"    column="hospital_code"    />
    </resultMap>

    <sql id="selectEquipmentVo">
        select equipment_id, equipment_number, equipment_version, equipment_status, hospital_code from equipment
    </sql>

    <select id="selectEquipmentList" parameterType="Equipment" resultMap="EquipmentResult">
        <include refid="selectEquipmentVo"/>
        <where>
            <if test="equipmentNumber != null  and equipmentNumber != ''"> and equipment_number like concat('%', #{equipmentNumber}, '%')</if>
            <if test="equipmentVersion != null  and equipmentVersion != ''"> and equipment_version like concat('%', #{equipmentVersion}, '%')</if>
            <if test="equipmentStatus != null  and equipmentStatus != ''"> and equipment_status like concat('%', #{equipmentStatus}, '%')</if>
            <if test="hospitalCode != null  and hospitalCode != ''"> and hospital_code like concat('%', #{hospitalCode}, '%')</if>
        </where>
    </select>

    <select id="selectEquipmentByEquipmentId" parameterType="Long" resultMap="EquipmentResult">
        <include refid="selectEquipmentVo"/>
        where equipment_id = #{equipmentId}
    </select>

    <insert id="insertEquipment" parameterType="Equipment">
        insert into equipment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="equipmentId != null">equipment_id,</if>
            <if test="equipmentNumber != null and equipmentNumber != ''">equipment_number,</if>
            <if test="equipmentVersion != null">equipment_version,</if>
            <if test="equipmentStatus != null">equipment_status,</if>
            <if test="hospitalCode != null and hospitalCode != ''">hospital_code,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="equipmentId != null">#{equipmentId},</if>
            <if test="equipmentNumber != null and equipmentNumber != ''">#{equipmentNumber},</if>
            <if test="equipmentVersion != null">#{equipmentVersion},</if>
            <if test="equipmentStatus != null">#{equipmentStatus},</if>
            <if test="hospitalCode != null and hospitalCode != ''">#{hospitalCode},</if>
        </trim>
    </insert>

    <update id="updateEquipment" parameterType="Equipment">
        update equipment
        <trim prefix="SET" suffixOverrides=",">
            <if test="equipmentNumber != null and equipmentNumber != ''">equipment_number = #{equipmentNumber},</if>
            <if test="equipmentVersion != null">equipment_version = #{equipmentVersion},</if>
            <if test="equipmentStatus != null">equipment_status = #{equipmentStatus},</if>
            <if test="hospitalCode != null and hospitalCode != ''">hospital_code = #{hospitalCode},</if>
        </trim>
        where equipment_id = #{equipmentId}
    </update>

    <delete id="deleteEquipmentByEquipmentId" parameterType="Long">
        delete from equipment where equipment_id = #{equipmentId}
    </delete>

    <delete id="deleteEquipmentByEquipmentIds" parameterType="String">
        delete from equipment where equipment_id in
        <foreach item="equipmentId" collection="array" open="(" separator="," close=")">
            #{equipmentId}
        </foreach>
    </delete>
</mapper>
