<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.xindian.equipment.mapper.EquipmentMapper">
    
    <resultMap type="Equipment" id="EquipmentResult">
        <result property="equipmentId"    column="equipment_id"    />
        <result property="equipmentVersion"    column="equipment_version"    />
        <result property="hospitalName"    column="hospital_name"    />
        <result property="hospitalCode"    column="hospital_code"    />
        <result property="connectionTime"    column="connection_time"    />
        <result property="patientId"    column="patient_id"    />
    </resultMap>

    <sql id="selectEquipmentVo">
        select equipment_id, equipment_version, hospital_name, hospital_code, connection_time, patient_id from equipment
    </sql>

    <select id="selectEquipmentList" parameterType="Equipment" resultMap="EquipmentResult">
        <include refid="selectEquipmentVo"/>
        <where>  
            <if test="equipmentVersion != null  and equipmentVersion != ''"> and equipment_version like concat('%', #{equipmentVersion}, '%')</if>
            <if test="hospitalName != null  and hospitalName != ''"> and hospital_name like concat('%', #{hospitalName}, '%')</if>
            <if test="hospitalCode != null  and hospitalCode != ''"> and hospital_code like concat('%', #{hospitalCode}, '%')</if>
            <if test="connectionTime != null "> and connection_time = #{connectionTime}</if>
            <if test="patientId != null  and patientId != ''"> and patient_id like concat('%', #{patientId}, '%')</if>
        </where>
    </select>
    
    <select id="selectEquipmentByEquipmentId" parameterType="String" resultMap="EquipmentResult">
        <include refid="selectEquipmentVo"/>
        where equipment_id = #{equipmentId}
    </select>
        
    <insert id="insertEquipment" parameterType="Equipment">
        insert into equipment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="equipmentId != null and equipmentId != ''">equipment_id,</if>
            <if test="equipmentVersion != null">equipment_version,</if>
            <if test="hospitalName != null">hospital_name,</if>
            <if test="hospitalCode != null">hospital_code,</if>
            <if test="connectionTime != null">connection_time,</if>
            <if test="patientId != null">patient_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="equipmentId != null and equipmentId != ''">#{equipmentId},</if>
            <if test="equipmentVersion != null">#{equipmentVersion},</if>
            <if test="hospitalName != null">#{hospitalName},</if>
            <if test="hospitalCode != null">#{hospitalCode},</if>
            <if test="connectionTime != null">#{connectionTime},</if>
            <if test="patientId != null">#{patientId},</if>
         </trim>
    </insert>

    <update id="updateEquipment" parameterType="Equipment">
        update equipment
        <trim prefix="SET" suffixOverrides=",">
            <if test="equipmentVersion != null">equipment_version = #{equipmentVersion},</if>
            <if test="hospitalName != null">hospital_name = #{hospitalName},</if>
            <if test="hospitalCode != null">hospital_code = #{hospitalCode},</if>
            <if test="connectionTime != null">connection_time = #{connectionTime},</if>
            <if test="patientId != null">patient_id = #{patientId},</if>
        </trim>
        where equipment_id = #{equipmentId}
    </update>

    <delete id="deleteEquipmentByEquipmentId" parameterType="String">
        delete from equipment where equipment_id = #{equipmentId}
    </delete>

    <delete id="deleteEquipmentByEquipmentIds" parameterType="String">
        delete from equipment where equipment_id in 
        <foreach item="equipmentId" collection="array" open="(" separator="," close=")">
            #{equipmentId}
        </foreach>
    </delete>
</mapper>