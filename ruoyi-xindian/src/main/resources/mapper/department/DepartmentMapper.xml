<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.xindian.hospital.mapper.DepartmentMapper">
    
    <resultMap type="Department" id="DepartmentResult">
        <result property="departmentId"    column="department_id"    />
        <result property="departmentCode"    column="department_code"    />
        <result property="departmentName"    column="department_name"    />
        <result property="hospitalCode"    column="hospital_code"    />
    </resultMap>

    <sql id="selectDepartmentVo">
        select department_id, department_code, department_name, hospital_code from department
    </sql>

    <select id="selectDepartmentList" parameterType="Department" resultMap="DepartmentResult">
        <include refid="selectDepartmentVo"/>
        <where>  
            <if test="departmentCode != null  and departmentCode != ''"> and department_code like concat('%', #{departmentCode}, '%')</if>
            <if test="departmentName != null  and departmentName != ''"> and department_name like concat('%', #{departmentName}, '%')</if>
            <if test="hospitalCodeList != null and hospitalCodeList.size()>0">
                and  hospital_code in
                <foreach collection="hospitalCodeList" index="index" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>


    <select id="selectAllDepartment" parameterType="Department" resultMap="DepartmentResult">
        SELECT DISTINCT department_code, department_name, hospital_code, department_id FROM department;
    </select>

    <select id="selectDepartmentByDepartmentId" parameterType="Long" resultMap="DepartmentResult">
        <include refid="selectDepartmentVo"/>
        where department_id = #{departmentId}
    </select>
    <select id="selectHospitalCodeDepartment" resultType="com.ruoyi.xindian.hospital.domain.Department">
        <include refid="selectDepartmentVo"/>
        where hospital_code = #{hospitalCode} and department_name = #{departmentName}
    </select>

    <insert id="insertDepartment" parameterType="Department" useGeneratedKeys="true" keyProperty="departmentId">
        insert into department
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="departmentCode != null and departmentCode != ''">department_code,</if>
            <if test="departmentName != null">department_name,</if>
            <if test="hospitalCode != null and hospitalCode != ''">hospital_code,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="departmentCode != null and departmentCode != ''">#{departmentCode},</if>
            <if test="departmentName != null">#{departmentName},</if>
            <if test="hospitalCode != null and hospitalCode != ''">#{hospitalCode},</if>
         </trim>
    </insert>

    <update id="updateDepartment" parameterType="Department">
        update department
        <trim prefix="SET" suffixOverrides=",">
            <if test="departmentCode != null and departmentCode != ''">department_code = #{departmentCode},</if>
            <if test="departmentName != null">department_name = #{departmentName},</if>
            <if test="hospitalCode != null and hospitalCode != ''">hospital_code = #{hospitalCode},</if>
        </trim>
        where department_id = #{departmentId}
    </update>

    <delete id="deleteDepartmentByDepartmentId" parameterType="Long">
        delete from department where department_id = #{departmentId}
    </delete>

    <delete id="deleteDepartmentByDepartmentIds" parameterType="String">
        delete from department where department_id in 
        <foreach item="departmentId" collection="array" open="(" separator="," close=")">
            #{departmentId}
        </foreach>
    </delete>
</mapper>